/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        mins_combo {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };

        unds_combo {
            bindings = <&kp UNDER>;
            key-positions = <19 16>;
        };

        squote_combo {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <28 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
     &kp ESC  &kp Q  &kp W           &kp F      &kp P                     &kp B      &kp J        &kp L      &kp U    &kp Y  &kp SEMI    &kp DEL
&kp LEFT_ALT  &kp A  &kp R           &kp S      &kp T                     &kp G      &kp M        &kp N      &kp E    &kp I     &kp O    &kp SQT
   &kp LCTRL  &kp Z  &kp X           &kp C      &kp D                     &kp V      &kp K        &kp H  &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                            &lt 3 LEFT_GUI  &lt 1 TAB  &mt LEFT_SHIFT BACKSPACE  &kp SPACE  &lt 2 ENTER   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB       &kp PERCENT             &kp AT        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp AMPS  &kp EQUAL  &kp N7  &kp N8  &kp N9    &kp PLUS  &kp DEL
&kp GRAVE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp EXCL  &kp ASTRK  &kp N4  &kp N5  &kp N6    &kp HASH  &kp TAB
&kp TILDE          &kp BSLH           &kp PIPE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp CARET  &kp UNDER  &kp N1  &kp N2  &kp N3  &kp DOLLAR  &kp ESC
                                                              &trans                  &none     &trans  &kp SPACE  &kp N0  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
       &kp TAB  &kp EXCL  &kp K_VOL_DN         &kp K_MUTE   &kp K_VOL_UP        &kp INS     &trans    &trans  &trans    &trans     &trans  &trans
&kp LEFT_SHIFT  &kp HOME       &kp END          &kp PG_UP      &kp PG_DN     &kp KP_NUM     &trans  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &trans
     &kp LCTRL     &kp Z         &kp X              &kp C   &kp LEFT_GUI          &kp V     &trans    &trans  &trans    &trans     &trans  &trans
                                        &kp LC(LS(GRAVE))  &kp LC(LS(P))  &kp BACKSPACE  &kp SPACE     &none  &trans
            >;
        };

        bt {
            bindings = <
&bt BT_CLR      &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &bt BT_NXT  &bt BT_PRV  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans  &trans
    &trans      &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans  &trans  &trans  &trans
            >;
        };
    };
};
